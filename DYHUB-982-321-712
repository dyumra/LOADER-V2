-- [[ DYHUB - Obfuscator ]]

local DYHUB_MNBVCXZ = "091/045/382"
local DYHUB_PLOKJHG = "112/098/203"
local DYHUB_QWERTY = "455/321/678"
local DYHUB_ASDFGH = "789/654/321"
local DYHUB_ZXCVBN = "234/567/890"
local DYHUB_MNBVCD = "876/543/210"
local DYHUB_PLKJHG = "102/304/506"
local DYHUB_QAZWSX = "908/172/635"
local DYHUB_XEDCRF = "334/556/778"
local DYHUB_TGBYHN = "111/222/333"
local DYHUB_UJMIKO = "444/555/666"
local DYHUB_OLPJKM = "777/888/999"
local DYHUB_QWASZX = "123/321/213"
local DYHUB_EDCRFV = "654/456/654"
local DYHUB_TGBNHY = "987/789/987"
local DYHUB_UJMIKO2 = "321/123/321"
local DYHUB_OPLKJM = "432/234/432"
local DYHUB_QAZXSW = "567/765/567"
local DYHUB_XEDCRF2 = "890/098/890"
local DYHUB_TGBYHN2 = "234/432/234"
local DYHUB_UJMKOI = "345/543/345"
local DYHUB_OPLKJN = "678/876/678"
local DYHUB_QAZWSX2 = "901/109/901"
local DYHUB_EDCRFV2 = "112/211/112"
local DYHUB_TGBYHN3 = "334/433/334"
local DYHUB_UJMIKO3 = "556/655/556"
local DYHUB_OPLKJM2 = "778/877/778"
local DYHUB_QAZXSW3 = "990/099/990"
local DYHUB_XEDCRF3 = "123/321/123"
local DYHUB_TGBYHN4 = "234/432/234"
local DYHUB_UJMKOI2 = "345/543/345"
local DYHUB_OPLKJN2 = "456/654/456"
local DYHUB_QAZWSX4 = "567/765/567"
local DYHUB_EDCRFV3 = "678/876/678"
local DYHUB_TGBYHN5 = "789/987/789"
local DYHUB_UJMIKO4 = "890/098/890"
local DYHUB_OPLKJM3 = "901/109/901"
local DYHUB_QAZXSW5 = "012/210/012"
local DYHUB_XEDCRF4 = "123/321/123"
local DYHUB_TGBYHN6 = "234/432/234"
local DYHUB_UJMKOI3 = "345/543/345"
local DYHUB_OPLKJN3 = "456/654/456"
local DYHUB_QAZWSX6 = "567/765/567"
local DYHUB_EDCRFV4 = "678/876/678"
local DYHUB_TGBYHN7 = "789/987/789"
local DYHUB_UJMIKO5 = "890/098/890"
local DYHUB_OPLKJM4 = "901/109/901"

local DYHUB_CODE1 = "/028012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/028/012/092/091/045/382/112/098/203/455/321/678/789/654/321/234/567/890/876/543/210/102/304/506/908/172/635/334/556/778/111/222/333/444/555/666/777/888/999/123/321/213/654/456/654/987/789/987/321/123/321/432/234/432/567/765/567/890/098/890/234/432/234/345/543/345/678/876/678/901/109/901/112/211/112/334/433/334/556/655/556/778/877/778/990/099/990/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012/123/321/123/234/432/234/345/543/345/456/654/456/567/765/567/678/876/678/789/987/789/890/098/890/901/109/901/012/210/012"
local DYHUB_CODE2 = "\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\028\012\092\091\045\382\112\098\203\455\321\678\789\654\321\234\567\890\876\543\210\102\304\506\908\172\635\334\556\778\111\222\333\444\555\666\777\888\999\123\321\213\654\456\654\987\789\987\321\123\321\432\234\432\567\765\567\890\098\890\234\432\234\345\543\345\678\876\678\901\109\901\112\211\112\334\433\334\556\655\556\778\877\778\990\099\990\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012\123\321\123\234\432\234\345\543\345\456\654\456\567\765\567\678\876\678\789\987\789\890\098\890\901\109\901\012\210\012"

local dyhub = {"\087\116\065\065\055\080\061\061", "\043\100\118\050\087\080\061\061",
               "\113\086\048\068\074\106\043\121\057\086\118\071\097\086\072\047\122\080\061\061", "\053\080\061\061",
               "\047\100\118\121\087\075\071\053\057\079\121\087\051\105\098\077\122\089\061\061",
               "\087\086\071\081\043\047\061\061",
               "\057\100\043\065\074\054\048\117\043\100\113\086\043\106\088\100\122\080\061\061",
               "\043\050\078\047\043\105\065\050\054\119\072\068\118\090\048\076\079\047\061\061",
               "\122\115\083\065\043\114\118\081\055\082\071\052\043\112\061\061",
               "\043\084\113\111\118\071\118\073\106\119\118\090\122\075\078\053", "\122\084\119\061",
               "\113\115\083\052\113\106\050\049\043\105\098\061",
               "\055\084\072\043\099\090\101\103\118\079\078\114\113\084\065\068\055\112\061\061",
               "\051\118\047\119\068\073\049\077\118\108\103\055\118\099\075\119\104\110\087\081\112\100\065\099\070\116\065\106\113\115\099\080\053\114\082\070\051\066\065\054\103\071\120\117\104\056\054\108\099\098\114\102\066\097\075\101\047\112\047\103\117\071\051\087\057\047\074\079\066\112\085\111\105\078\084\083\115\104\109\112\107\117\080\112\067\106\071\054\114\055\069\106\056\085\099\079\112\120\108\100",
               "\122\106\078\081\057\089\061\061", "\055\115\118\065\122\115\112\061",
               "\105\050\083\117\043\105\101\065\113\115\078\049\122\115\079\061",
               "\097\114\101\081\055\119\113\071\113\089\061\061", "\043\116\078\117\043\047\061\061",
               "\051\084\054\105\087\047\061\061", "\043\054\054\048\099\119\077\081\097\079\079\061",
               "\105\050\083\048\122\082\101\071\074\089\061\061", "\113\115\078\049\122\115\079\061",
               "\105\050\083\056\043\106\077\061", "\055\082\078\052\043\115\083\117",
               "\087\116\083\052\087\116\078\081", "\118\082\072\088\101\114\118\043\051\116\119\075\118\054\072\101",
               "\087\105\048\098\113\078\078\086\057\100\071\088\079\090\098\112", "",
               "\043\116\050\065\113\115\118\066", "\122\051\099\061", "\122\115\054\052",
               "\055\082\054\117\122\100\043\071", "\113\115\083\075\113\114\072\048\122\082\055\061",
               "\113\106\088\112\087\106\118\085", "\055\100\101\108\057\106\088\086",
               "\043\105\072\108\122\100\098\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061",
               "\054\115\078\117\055\115\054\108\098\119\101\071\113\115\054\103\113\115\054\090\098\047\061\061",
               "\122\084\098\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061",
               "\087\116\065\065\055\080\061\061", "\043\100\118\050\087\080\061\061",
               "\113\086\048\068\074\106\043\121\057\086\118\071\097\086\072\047\122\080\061\061", "\053\080\061\061",
               "\047\100\118\121\087\075\071\053\057\079\121\087\051\105\098\077\122\089\061\061",
               "\087\086\071\081\043\047\061\061",
               "\057\100\043\065\074\054\048\117\043\100\113\086\043\106\088\100\122\080\061\061",
               "\043\050\078\047\043\105\065\050\054\119\072\068\118\090\048\076\079\047\061\061",
               "\122\115\083\065\043\114\118\081\055\082\071\052\043\112\061\061",
               "\043\084\113\111\118\071\118\073\106\119\118\090\122\075\078\053", "\122\084\119\061",
               "\113\115\083\052\113\106\050\049\043\105\098\061",
               "\055\084\072\043\099\090\101\103\118\079\078\114\113\084\065\068\055\112\061\061",
               "\051\118\047\119\068\073\049\077\118\108\103\055\118\099\075\119\104\110\087\081\112\100\065\099\070\116\065\106\113\115\099\080\053\114\082\070\051\066\065\054\103\071\120\117\104\056\054\108\099\098\114\102\066\097\075\101\047\112\047\103\117\071\051\087\057\047\074\079\066\112\085\111\105\078\084\083\115\104\109\112\107\117\080\112\067\106\071\054\114\055\069\106\056\085\099\079\112\120\108\100",
               "\122\106\078\081\057\089\061\061", "\055\115\118\065\122\115\112\061",
               "\105\050\083\117\043\105\101\065\113\115\078\049\122\115\079\061",
               "\097\114\101\081\055\119\113\071\113\089\061\061", "\043\116\078\117\043\047\061\061",
               "\051\084\054\105\087\047\061\061", "\043\054\054\048\099\119\077\081\097\079\079\061",
               "\105\050\083\048\122\082\101\071\074\089\061\061", "\113\115\078\049\122\115\079\061",
               "\105\050\083\056\043\106\077\061", "\055\082\078\052\043\115\083\117",
               "\087\116\083\052\087\116\078\081", "\118\082\072\088\101\114\118\043\051\116\119\075\118\054\072\101",
               "\087\105\048\098\113\078\078\086\057\100\071\088\079\090\098\112", "",
               "\043\116\050\065\113\115\118\066", "\122\051\099\061", "\122\115\054\052",
               "\055\082\054\117\122\100\043\071", "\113\115\083\075\113\114\072\048\122\082\055\061",
               "\113\106\088\112\087\106\118\085", "\055\100\101\108\057\106\088\086",
               "\043\105\072\108\122\100\098\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061",
               "\054\115\078\117\055\115\054\108\098\119\101\071\113\115\054\103\113\115\054\090\098\047\061\061",
               "\122\084\098\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061"}

return (function(...)
    local v = {"\087\116\065\065\055\080\061\061", "\043\100\118\050\087\080\061\061",
               "\113\086\048\068\074\106\043\121\057\086\118\071\097\086\072\047\122\080\061\061", "\053\080\061\061",
               "\047\100\118\121\087\075\071\053\057\079\121\087\051\105\098\077\122\089\061\061",
               "\087\086\071\081\043\047\061\061",
               "\057\100\043\065\074\054\048\117\043\100\113\086\043\106\088\100\122\080\061\061",
               "\043\050\078\047\043\105\065\050\054\119\072\068\118\090\048\076\079\047\061\061",
               "\122\115\083\065\043\114\118\081\055\082\071\052\043\112\061\061",
               "\043\084\113\111\118\071\118\073\106\119\118\090\122\075\078\053", "\122\084\119\061",
               "\113\115\083\052\113\106\050\049\043\105\098\061",
               "\055\084\072\043\099\090\101\103\118\079\078\114\113\084\065\068\055\112\061\061",
               "\051\118\047\119\068\073\049\077\118\108\103\055\118\099\075\119\104\110\087\081\112\100\065\099\070\116\065\106\113\115\099\080\053\114\082\070\051\066\065\054\103\071\120\117\104\056\054\108\099\098\114\102\066\097\075\101\047\112\047\103\117\071\051\087\057\047\074\079\066\112\085\111\105\078\084\083\115\104\109\112\107\117\080\112\067\106\071\054\114\055\069\106\056\085\099\079\112\120\108\100",
               "\122\106\078\081\057\089\061\061", "\055\115\118\065\122\115\112\061",
               "\105\050\083\117\043\105\101\065\113\115\078\049\122\115\079\061",
               "\097\114\101\081\055\119\113\071\113\089\061\061", "\043\116\078\117\043\047\061\061",
               "\051\084\054\105\087\047\061\061", "\043\054\054\048\099\119\077\081\097\079\079\061",
               "\105\050\083\048\122\082\101\071\074\089\061\061", "\113\115\078\049\122\115\079\061",
               "\105\050\083\056\043\106\077\061", "\055\082\078\052\043\115\083\117",
               "\087\116\083\052\087\116\078\081", "\118\082\072\088\101\114\118\043\051\116\119\075\118\054\072\101",
               "\087\105\048\098\113\078\078\086\057\100\071\088\079\090\098\112", "",
               "\043\116\050\065\113\115\118\066", "\122\051\099\061", "\122\115\054\052",
               "\055\082\054\117\122\100\043\071", "\113\115\083\075\113\114\072\048\122\082\055\061",
               "\113\106\088\112\087\106\118\085", "\055\100\101\108\057\106\088\086",
               "\043\105\072\108\122\100\098\061",
               "\054\115\078\117\055\115\054\108\098\119\101\071\113\115\054\103\113\115\054\090\098\047\061\061",
               "\122\084\098\061", "\118\105\054\119\051\082\088\082\043\084\054\048\097\105\072\085\054\047\061\061",
               "\097\075\101\116\047\116\117\054\101\119\072\049\043\100\067\056", "\105\050\083\086\087\112\061\061",
               "\043\082\121\111\122\100\098\061", "\055\116\054\081\122\106\054\081\087\105\101\065\087\082\121\071",
               "\053\049\080\071\043\076\066\048\053\080\061\061",
               "\101\100\101\072\097\079\071\097\079\090\078\076\051\071\043\057",
               "\079\051\101\066\054\115\065\075\118\050\119\061"}
    local function X(X)
        return v[X + (36347 - (-11977))]
    end
    for X, i in ipairs({{-852604 + 852605, 118646 - 118599}, {-259692 - (-259693), -199693 - (-199735)},
                        {605021 + -604978, -130541 + 130588}}) do
        while i[-807208 + 807209] < i[-122773 + 122775] do
            v[i[140182 - 140181]], v[i[-332858 - (-332860)]], i[-608669 - (-608670)], i[-1041932 + 1041934] =
                v[i[658105 + -658103]], v[i[567062 + -567061]], i[623879 + -623878] + (710486 - 710485),
                i[-430099 + 430101] - (-136907 - (-136908))
        end
    end
    do
        local X = math.floor
        local i = table.concat
        local P = string.char
        local Z = string.sub
        local J = table.insert
        local D = type
        local d = {
            a = 951629 + -951611,
            ["\049"] = 235042 - 235008,
            h = -532406 + 532417,
            e = 125702 - 125685,
            b = 958887 + -958879,
            Z = 13226 - 13190,
            p = 229498 - 229450,
            U = 637486 + -637443,
            ["\051"] = 461391 - 461372,
            E = -16811 - (-16869),
            M = 116196 - 116140,
            ["\053"] = -489948 - (-489962),
            j = 935317 + -935295,
            ["\057"] = 941904 + -941878,
            ["\050"] = 902353 + -902300,
            q = 152443 + -152414,
            V = 531723 + -531684,
            r = 974580 + -974573,
            C = -380022 + 380023,
            f = -529434 - (-529465),
            u = -721326 - (-721371),
            ["\055"] = -563470 - (-563498),
            I = 419407 - 419365,
            O = -1035681 - (-1035701),
            w = -348046 + 348050,
            H = -907382 - (-907391),
            D = -804957 + 804972,
            t = -1005401 - (-1005455),
            v = 104181 + -104168,
            ["\052"] = -345354 + 345400,
            A = 584475 + -584442,
            Y = -779920 + 779920,
            s = 744988 - 744982,
            ["\056"] = -751706 + 751750,
            y = -156478 + 156527,
            n = -178005 + 178067,
            W = -153234 + 153258,
            T = -248294 - (-248297),
            g = -106486 - (-106521),
            F = -276216 + 276226,
            d = -518952 + 519007,
            k = -82216 - (-82279),
            N = -129605 + 129610,
            K = -697015 + 697066,
            L = -660418 + 660420,
            c = 110457 - 110445,
            ["\043"] = 407198 - 407173,
            m = 853624 - 853565,
            ["\048"] = 746010 - 745969,
            Q = -101784 - (-101836),
            X = -516778 - (-516835),
            G = -847315 - (-847352),
            i = -105622 + 105645,
            o = 1005724 + -1005677,
            ["\047"] = 789994 + -789978,
            P = 20402 + -20370,
            l = -705419 - (-705469),
            x = -680443 - (-680503),
            J = 128758 - 128728,
            z = 343571 - 343544,
            B = -431868 + 431908,
            S = 34483 + -34422,
            ["\054"] = -141293 - (-141314),
            R = 976680 + -976642
        }
        local m = string.len
        local z = v
        for v = 955859 + -955858, #z, 1014468 + -1014467 do
            local q = z[v]
            if D(q) == "\115\116\114\105\110\103" then
                local D = m(q)
                local S = {}
                local M = -869100 + 869101
                local p = -869719 - (-869719)
                local u = -242583 + 242583
                while M <= D do
                    local v = Z(q, M, M)
                    local i = d[v]
                    if i then
                        p = p + i * (912330 + -912266) ^ ((-12138 + 12141) - u)
                        u = u + (-477379 - (-477380))
                        if u == -12970 + 12974 then
                            u = -374473 + 374473
                            local v = X(p / (-104600 + 170136))
                            local i = X((p % (-485671 + 551207)) / (260983 - 260727))
                            local Z = p % (206327 + -206071)
                            J(S, P(v, i, Z))
                            p = 136658 + -136658
                        end
                    elseif v == "\061" then
                        J(S, P(X(p / (-417287 - (-482823)))))
                        if M >= D or Z(q, M + (933930 + -933929), M + (-319724 - (-319725))) ~= "\061" then
                            J(S, P(X((p % (-371719 - (-437255))) / (-612164 + 612420))))
                        end
                        break
                    end
                    M = M + (651312 - 651311)
                end
                z[v] = i(S)
            end
        end
    end
    return (function(v, P, Z, J, D, d, m, q, h, S, f, k, o, i, e, b, M, R, z, B, p, u)
        B, o, k, f, b, z, e, M, h, S, p, u, R, i, q = function(v, X)
            local P = p(X)
            local Z = function(Z, J, D, d, m)
                return i(v, {Z, J, D, d, m}, X, P)
            end
            return Z
        end, function(v, X)
            local P = p(X)
            local Z = function(Z, J, D, d, m, z, q)
                return i(v, {Z, J, D, d, m, z, q}, X, P)
            end
            return Z
        end, function(v)
            q[v] = q[v] - (270950 - 270949)
            if q[v] == -732259 + 732259 then
                q[v], z[v] = nil, nil
            end
        end, function(v, X)
            local P = p(X)
            local Z = function(...)
                return i(v, {...}, X, P)
            end
            return Z
        end, function(v, X)
            local P = p(X)
            local Z = function(Z)
                return i(v, {Z}, X, P)
            end
            return Z
        end, {}, function(v, X)
            local P = p(X)
            local Z = function(Z, J, D, d)
                return i(v, {Z, J, D, d}, X, P)
            end
            return Z
        end, 154458 + -154458, function(v, X)
            local P = p(X)
            local Z = function()
                return i(v, {}, X, P)
            end
            return Z
        end, function()
            M = (783164 - 783163) + M
            q[M] = 150058 - 150057
            return M
        end, function(v)
            for X = 391937 + -391936, #v, -977657 + 977658 do
                q[v[X]] = (-21597 - (-21598)) + q[v[X]]
            end
            if Z then
                local i = Z(true)
                local P = D(i)
                P[X(983828 - 1032135)], P[X(-18012 + -30275)], P[X(568851 + -617156)] = v, u, function()
                    return 67948 - (-244131)
                end
                return i
            else
                return J({}, {
                    [X(-26002 + -22285)] = u,
                    [X(-132169 + 83862)] = v,
                    [X(352592 - 400897)] = function()
                        return 502052 + -189973
                    end
                })
            end
        end, function(v)
            local X, i = -505005 + 505006, v[-464834 - (-464835)]
            while i do
                q[i], X = q[i] - (50143 - 50142), (351620 + -351619) + X
                if 241144 + -241144 == q[i] then
                    q[i], z[i] = nil, nil
                end
                i = v[X]
            end
        end, function(v, X)
            local P = p(X)
            local Z = function(Z, J)
                return i(v, {Z, J}, X, P)
            end
            return Z
        end, function(i, Z, J, D)
            local x, m, s, a, f, F, L, y, w, N, n, U, W, p, G, g, u, E, Q, q, O, A, I, C, l, Y, M, t, V, T, K, j, c, H
            while i do
                if i < 918571 + 7552876 then
                    if i < -618961 + 5424670 then
                        if i < 3458555 - 559105 then
                            if i < 2230036 - 455279 then
                                if i < -410241 + 1281159 then
                                    if i < 883735 - 34325 then
                                        if i < 752408 + 19162 then
                                            u = X(-277248 + 228953)
                                            U = b(5884545 - 441413, {})
                                            C = X(-917847 - (-869534))
                                            m = X(-105793 + 57476)
                                            i = v[m]
                                            q = z[J[597921 + -597917]]
                                            p = v[u]
                                            a = v[C]
                                            C = {a(U)}
                                            Q = {P(C)}
                                            a = -511986 - (-511988)
                                            f = Q[a]
                                            u = p(f)
                                            p = X(198964 + -247248)
                                            M = q(u, p)
                                            q = {M()}
                                            m = i(P(q))
                                            M = z[J[366642 - 366637]]
                                            q = m
                                            i = M and 240659 + 5539448 or 6818337 - 559039
                                            m = M
                                        else
                                            i = 44362 - (-810954)
                                        end
                                    else
                                        i = true
                                        i = i and -133124 + 4941433 or 16658461 - (-47360)
                                    end
                                else
                                    if i < -1042550 + 2083695 then
                                        l = X(-321099 + 272781)
                                        N = X(509588 - 557883)
                                        i = v[N]
                                        W = v[l]
                                        N = i(W)
                                        i = X(499899 - 548189)
                                        v[i] = N
                                        i = 1393687 - 621715
                                    else
                                        i = 11609853 - (-311889)
                                        z[M] = m
                                    end
                                end
                            else
                                if i < -676191 + 3091593 then
                                    if i < 2843727 - 704689 then
                                        p = X(923375 - 971681)
                                        M = v[p]
                                        p = X(-231744 - (-183448))
                                        q = M[p]
                                        p = z[J[729058 - 729057]]
                                        i = v[X(819846 + -868134)]
                                        M = {q(p)}
                                        m = {P(M)}
                                    else
                                        U = S()
                                        N = X(972495 - 1020790)
                                        g = -241148 - (-241151)
                                        K = -565529 - (-565594)
                                        z[U] = m
                                        H = X(-416628 + 368315)
                                        i = z[a]
                                        m = i(g, K)
                                        g = S()
                                        j = B(13968303 - 52487, {})
                                        z[g] = m
                                        i = -767579 + 767579
                                        m = v[H]
                                        H = {m(j)}
                                        K = i
                                        i = 343388 - 343388
                                        V = i
                                        i = {P(H)}
                                        m = 163599 + -163597
                                        H = i
                                        i = H[m]
                                        j = i
                                        m = X(-349758 + 301441)
                                        i = v[m]
                                        F = z[p]
                                        O = v[N]
                                        N = O(j)
                                        O = X(696231 - 744515)
                                        G = F(N, O)
                                        F = {G()}
                                        m = i(P(F))
                                        F = S()
                                        z[F] = m
                                        m = 162038 + -162037
                                        G = z[g]
                                        O = G
                                        G = -348178 + 348179
                                        N = G
                                        i = 62261 + 11650875
                                        G = 746151 - 746151
                                        W = N < G
                                        G = m - N
                                    end
                                else
                                    if i < 1984412 - (-644910) then
                                        i = true
                                        i = i and -340101 + 6022833 or 14216817 - (-751003)
                                    else
                                        Q = z[f]
                                        m = Q
                                        i = 10492495 - 61244
                                    end
                                end
                            end
                        else
                            if i < -269436 + 3973005 then
                                if i < -768929 + 4221262 then
                                    if i < -179132 + 3451398 then
                                        if i < -875316 + 3794840 then
                                            i = 11126521 - (-771291)
                                        else
                                            W = X(552558 - 600848)
                                            i = v[W]
                                            W = X(656924 + -705242)
                                            v[W] = i
                                            i = 990592 - 218620
                                        end
                                    else
                                        p = 543381 + -543229
                                        M = z[J[-197706 + 197709]]
                                        q = M * p
                                        M = 584737 + -584480
                                        m = q % M
                                        z[J[480877 + -480874]] = m
                                        i = 14577922 - 217637
                                    end
                                else
                                    if i < 3725521 - 116855 then
                                        w = z[M]
                                        m = w
                                        i = w and 8545907 - 728280 or 2671575 - 898058
                                    else
                                        q = X(-959168 - (-910876))
                                        i = v[q]
                                        M = z[J[-918478 - (-918486)]]
                                        p = 815520 - 815520
                                        q = i(M, p)
                                        i = 7855869 - (-121364)
                                    end
                                end
                            else
                                if i < 4511500 - 377820 then
                                    if i < 621211 + 3138115 then
                                        i = v[X(82017 - 130294)]
                                        m = {}
                                    else
                                        n = 613794 + -613793
                                        z[M] = w
                                        Y = z[y]
                                        c = Y + n
                                        t = L[c]
                                        I = K + t
                                        t = -828127 - (-828383)
                                        i = I % t
                                        K = i
                                        i = 11755781 - (-165961)
                                        c = z[x]
                                        t = V + c
                                        c = 779195 - 778939
                                        I = t % c
                                        V = I
                                    end
                                else
                                    if i < 512711 + 4081946 then
                                        O = z[M]
                                        G = O
                                        i = O and 15954766 - 630443 or -371808 + 5268350
                                    else
                                        a = not Q
                                        p = p + f
                                        M = p <= u
                                        M = a and M
                                        a = p >= u
                                        a = Q and a
                                        M = a or M
                                        a = 15714336 - (-221273)
                                        i = M and a
                                        M = 10960515 - 167543
                                        i = i or M
                                    end
                                end
                            end
                        end
                    else
                        if i < -646590 + 6883561 then
                            if i < -389687 + 6155695 then
                                if i < 4354667 - (-1047057) then
                                    if i < 748570 + 4209548 then
                                        if i < 3945575 - (-907688) then
                                            W = 948944 + -948938
                                            i = z[a]
                                            N = 79598 - 79597
                                            O = i(N, W)
                                            i = X(-923070 - (-874780))
                                            v[i] = O
                                            W = X(-1015019 - (-966729))
                                            N = v[W]
                                            W = 819540 - 819538
                                            i = N > W
                                            i = i and -148194 + 1043922 or 3763126 - 838814
                                        else
                                            z[M] = G
                                            i = z[M]
                                            i = i and 381401 + 8160995 or 7567622 - 1043282
                                        end
                                    else
                                        m = X(-910445 - (-862153))
                                        q = X(-701470 + 653179)
                                        i = v[m]
                                        m = i(q)
                                        m = {}
                                        i = v[X(82576 + -130897)]
                                    end
                                else
                                    if i < 561198 + 5086156 then
                                        m = 5501018 - 35187
                                        M = X(-190429 + 142120)
                                        p = 15923314 - (-235910)
                                        q = M ^ p
                                        i = m - q
                                        m = X(-548630 - (-500332))
                                        q = i
                                        i = m / q
                                        m = {i}
                                        i = v[X(-838283 + 789964)]
                                    else
                                        i = 785583 - (-69733)
                                    end
                                end
                            else
                                if i < 6756825 - 794929 then
                                    if i < 5199486 - (-589233) then
                                        p = z[J[592439 + -592433]]
                                        M = p == q
                                        m = M
                                        i = 5567489 - (-691809)
                                    else
                                        I = z[M]
                                        i = I and 15488593 - (-405059) or 3255628 - (-669041)
                                        w = I
                                    end
                                else
                                    if i < -861114 + 6960752 then
                                        i = -175805 + 6428553
                                    else
                                        C = g
                                        N = X(866900 - 915193)
                                        O = v[N]
                                        N = X(-791003 + 742680)
                                        G = O[N]
                                        O = G(q, C)
                                        C = nil
                                        i = 9439183 - (-15279)
                                        G = z[J[-302919 + 302925]]
                                        N = G()
                                        F = O + N
                                        N = 929711 + -929710
                                        j = F + Q
                                        F = -354564 - (-354820)
                                        H = j % F
                                        F = p[M]
                                        Q = H
                                        O = Q + N
                                        G = u[O]
                                        j = F .. G
                                        p[M] = j
                                    end
                                end
                            end
                        else
                            if i < 1007754 + 5981452 then
                                if i < 7462599 - 997576 then
                                    if i < 533060 + 5720780 then
                                        if i < 6372977 - 122134 then
                                            j = F
                                            i = 9168559 - (-536634)
                                            x = j
                                            H[j] = x
                                            j = nil
                                        else
                                            m = {M}
                                            i = v[X(288877 - 337178)]
                                        end
                                    else
                                        i = -307934 + 16237302
                                        q = nil
                                        z[J[354503 + -354498]] = m
                                    end
                                else
                                    if i < -329112 + 7136703 then
                                        i = true
                                        i = -556757 + 15524577
                                    else
                                        i = 11099997 - 1017828
                                        Y = -277584 + 277586
                                        c = L[Y]
                                        Y = z[A]
                                        t = c == Y
                                        w = t
                                    end
                                end
                            else
                                if i < 7858985 - 38427 then
                                    if i < 7454412 - 166548 then
                                        L = -475435 - (-475437)
                                        l = S()
                                        t = X(492229 + -540524)
                                        T = X(110500 + -158814)
                                        z[l] = G
                                        m = v[T]
                                        x = 95418 + -95318
                                        T = X(-710309 - (-662005))
                                        A = 921079 + -921078
                                        i = m[T]
                                        T = 319679 - 319678
                                        m = i(T, x)
                                        y = -831052 - (-831307)
                                        x = 333952 - 333952
                                        T = S()
                                        s = -331182 + 341182
                                        z[T] = m
                                        i = z[a]
                                        m = i(x, y)
                                        y = -793951 - (-793952)
                                        x = S()
                                        z[x] = m
                                        i = z[a]
                                        E = z[T]
                                        m = i(y, E)
                                        y = S()
                                        z[y] = m
                                        m = z[a]
                                        E = m(A, L)
                                        m = 869791 - 869790
                                        i = E == m
                                        m = X(-502025 - (-453741))
                                        L = X(370403 + -418681)
                                        n = -616474 - (-616474)
                                        E = S()
                                        z[E] = i
                                        I = v[t]
                                        c = z[a]
                                        Y = {c(n, s)}
                                        t = I(P(Y))
                                        I = X(17666 + -65944)
                                        w = t .. I
                                        A = L .. w
                                        i = X(-1031576 - (-983296))
                                        i = j[i]
                                        L = X(619915 - 668228)
                                        i = i(j, m, A)
                                        A = S()
                                        w = B(15452202 - 602297, {a, l, g, p, M, F, E, A, T, y, x, U})
                                        z[A] = i
                                        m = v[L]
                                        L = {m(w)}
                                        i = {P(L)}
                                        L = i
                                        i = z[E]
                                        i = i and 3831303 - 254221 or -391997 + 6184488
                                    else
                                        Y = 441711 + -441710
                                        I = i
                                        c = L[Y]
                                        Y = false
                                        t = c == Y
                                        w = t
                                        i = t and 5946028 - (-1001150) or 661517 + 9420652
                                    end
                                else
                                    if i < 7024865 - (-819896) then
                                        M = z[J[790752 - 790750]]
                                        p = z[J[-274621 + 274624]]
                                        i = -564753 + 16222436
                                        q = M == p
                                        m = q
                                    else
                                        i = {}
                                        p = z[J[-309906 - (-309915)]]
                                        u = p
                                        q = i
                                        p = 201608 + -201607
                                        i = -1014234 + 5798087
                                        f = p
                                        p = 290836 + -290836
                                        Q = f < p
                                        M = 1011195 + -1011194
                                        p = M - f
                                    end
                                end
                            end
                        end
                    end
                else
                    if i < 12186657 - 41455 then
                        if i < 173125 + 10054746 then
                            if i < -140287 + 9842902 then
                                if i < -425189 + 9932288 then
                                    if i < 547093 + 8467553 then
                                        if i < 7501610 - (-1040435) then
                                            W = 1038415 + -1038415
                                            F = #H
                                            j = F == W
                                            i = j and 9004272 - (-697608) or 13388472 - (-30958)
                                        else
                                            i = 636140 + 9547827
                                        end
                                    else
                                        g = g + K
                                        H = not V
                                        C = g <= U
                                        C = H and C
                                        H = g >= U
                                        H = V and H
                                        C = H or C
                                        H = 6555023 - 416082
                                        i = C and H
                                        C = 716257 + 11577523
                                        i = i or C
                                    end
                                else
                                    if i < 10055595 - 471069 then
                                        M = z[J[681733 + -681731]]
                                        p = 547894 - 547781
                                        q = M * p
                                        M = 95554 + 20847911121065
                                        m = q + M
                                        q = 51874 + 35184372036958
                                        i = m % q
                                        M = -621871 - (-621872)
                                        z[J[-272477 + 272479]] = i
                                        q = z[J[-170240 - (-170243)]]
                                        i = 3745077 - 390014
                                        m = q ~= M
                                    else
                                        x = {}
                                        K = nil
                                        t = nil
                                        j = {}
                                        F = S()
                                        T = X(497185 + -545470)
                                        L = X(-361730 - (-313418))
                                        W = e(593217 + 14731055, {F, U, g, f})
                                        E = X(869181 - 917488)
                                        a = nil
                                        H = nil
                                        l = S()
                                        z[F] = j
                                        C = nil
                                        j = S()
                                        z[j] = W
                                        u = nil
                                        W = {}
                                        z[l] = W
                                        W = v[T]
                                        A = z[l]
                                        y = {
                                            [E] = A,
                                            [L] = t
                                        }
                                        i = v[X(-631931 - (-583609))]
                                        f = k(f)
                                        T = W(x, y)
                                        m = {}
                                        W = o(-816150 + 14313532, {l, F, V, U, g, j})
                                        F = k(F)
                                        K = -138944 + 32165916170562
                                        p = W
                                        a = X(-218577 + 170267)
                                        M = T
                                        g = k(g)
                                        f = X(-974071 - (-925751))
                                        V = k(V)
                                        U = k(U)
                                        g = X(-658471 + 610156)
                                        j = k(j)
                                        Q = nil
                                        l = k(l)
                                        u = v[f]
                                        Q = v[a]
                                        U = p(g, K)
                                        C = M[U]
                                        p = nil
                                        U = X(378001 + -426312)
                                        U = Q[U]
                                        a = {U(Q, C)}
                                        f = u(P(a))
                                        u = f()
                                        M = nil
                                    end
                                end
                            else
                                if i < 9914459 - (-162129) then
                                    if i < -718155 + 10624348 then
                                        F = F + l
                                        j = F <= W
                                        x = not T
                                        j = x and j
                                        x = F >= W
                                        x = T and x
                                        j = x or j
                                        x = -593440 + 6843825
                                        i = j and x
                                        j = 9127358 - (-828273)
                                        i = i or j
                                    else
                                        i = -933966 + 14353396
                                        W = -644914 + 644914
                                        F = #H
                                        j = F == W
                                    end
                                else
                                    if i < -396245 + 10579266 then
                                        i = I
                                        m = w
                                        i = 1763574 - (-9943)
                                    else
                                        F = k(F)
                                        H = nil
                                        V = nil
                                        u = k(u)
                                        g = k(g)
                                        p = k(p)
                                        Q = nil
                                        C = nil
                                        M = k(M)
                                        U = k(U)
                                        a = k(a)
                                        f = k(f)
                                        K = nil
                                        j = nil
                                        M = nil
                                        C = X(-465566 + 417260)
                                        Q = X(579061 + -627375)
                                        a = X(402081 - 450395)
                                        p = nil
                                        f = v[Q]
                                        F = -87924 - (-88180)
                                        Q = X(-518744 - (-470458))
                                        u = f[Q]
                                        U = X(108688 + -156981)
                                        f = S()
                                        W = F
                                        z[f] = u
                                        Q = v[a]
                                        a = X(-370047 - (-321743))
                                        u = Q[a]
                                        a = v[C]
                                        C = X(-289771 + 241475)
                                        Q = a[C]
                                        j = 357660 - 357659
                                        V = S()
                                        C = v[U]
                                        U = X(776982 + -825263)
                                        a = C[U]
                                        C = -384034 + 384034
                                        g = S()
                                        K = {}
                                        U = S()
                                        z[U] = C
                                        C = -625876 + 625878
                                        z[g] = C
                                        C = {}
                                        z[V] = K
                                        F = -79265 - (-79266)
                                        i = 663890 + 9041303
                                        H = {}
                                        l = F
                                        F = 205354 - 205354
                                        T = l < F
                                        K = 592769 - 592769
                                        F = j - l
                                    end
                                end
                            end
                        else
                            if i < 12168904 - 379099 then
                                if i < -126755 + 11130608 then
                                    if i < 10942866 - 125673 then
                                        if i < 11110339 - 665309 then
                                            a = X(199726 - 248040)
                                            Q = m
                                            C = X(-667937 + 619631)
                                            m = v[a]
                                            a = X(663802 - 712106)
                                            i = m[a]
                                            a = S()
                                            V = X(32703 - 81009)
                                            z[a] = i
                                            m = v[C]
                                            C = X(525751 + -574054)
                                            i = m[C]
                                            C = i
                                            K = v[V]
                                            U = K
                                            g = i
                                            i = K and 137138 + 13423717 or 54819 + 12077266
                                        else
                                            i = z[J[799367 + -799357]]
                                            M = z[J[550547 - 550536]]
                                            q[i] = M
                                            i = z[J[-737031 - (-737043)]]
                                            M = {i(q)}
                                            i = v[X(570449 + -618732)]
                                            m = {P(M)}
                                        end
                                    else
                                        p = 69836 - 69804
                                        K = 554432 + -554419
                                        M = z[J[-198998 + 199001]]
                                        U = 61764 - 61762
                                        q = M % p
                                        u = z[J[301305 + -301301]]
                                        a = z[J[-78311 - (-78313)]]
                                        j = z[J[-267866 + 267869]]
                                        H = j - q
                                        j = 403769 - 403737
                                        V = H / j
                                        g = K - V
                                        C = U ^ g
                                        Q = a / C
                                        f = u(Q)
                                        u = 4294821179 - (-146117)
                                        p = f % u
                                        f = -61924 + 61926
                                        u = f ^ q
                                        i = 728818 + 1330073
                                        M = p / u
                                        u = z[J[-1002669 + 1002673]]
                                        C = -1025304 - (-1025305)
                                        a = M % C
                                        C = 301583 + 4294665713
                                        Q = a * C
                                        f = u(Q)
                                        a = -413061 + 478597
                                        u = z[J[-457417 + 457421]]
                                        q = nil
                                        Q = u(M)
                                        p = f + Q
                                        f = -724136 - (-789672)
                                        u = p % f
                                        U = -391491 + 391747
                                        M = nil
                                        Q = p - u
                                        f = Q / a
                                        a = -224950 + 225206
                                        Q = u % a
                                        C = u - Q
                                        a = C / U
                                        U = 863256 - 863000
                                        p = nil
                                        C = f % U
                                        u = nil
                                        K = -105562 + 105818
                                        g = f - C
                                        f = nil
                                        U = g / K
                                        g = {Q, a, C, U}
                                        U = nil
                                        C = nil
                                        z[J[933018 + -933017]] = g
                                        a = nil
                                        Q = nil
                                    end
                                else
                                    if i < 248754 + 10983540 then
                                        i = 283877 + 2010574
                                        g = X(-211193 - (-162899))
                                        U = v[g]
                                        m = U
                                    else
                                        l = not W
                                        G = G + N
                                        m = G <= O
                                        m = l and m
                                        l = G >= O
                                        l = W and l
                                        m = l or m
                                        l = 641945 + 6515207
                                        i = m and l
                                        m = 3955367 - (-326715)
                                        i = i or m
                                    end
                                end
                            else
                                if i < 11704372 - (-259566) then
                                    if i < -573836 + 12491757 then
                                        i = true
                                        i = i and 701549 + 15852712 or 4376833 - 645773
                                    else
                                        A = k(A)
                                        L = nil
                                        i = 12552313 - 839177
                                        E = k(E)
                                        T = k(T)
                                        x = k(x)
                                        l = k(l)
                                        y = k(y)
                                    end
                                else
                                    if i < -486394 + 12526121 then
                                        M = S()
                                        i = true
                                        u = S()
                                        p = X(-17038 + -31255)
                                        z[M] = i
                                        q = Z
                                        m = v[p]
                                        p = X(738428 - 786727)
                                        f = S()
                                        i = m[p]
                                        C = R(17344112 - 809429, {f})
                                        a = X(-544886 - (-496573))
                                        p = S()
                                        z[p] = i
                                        i = B(66383 + 5167402, {})
                                        z[u] = i
                                        i = false
                                        z[f] = i
                                        Q = v[a]
                                        a = Q(C)
                                        m = a
                                        i = a and 2961920 - 311724 or 871044 + 9560207
                                    else
                                        m = U
                                        i = g
                                        i = U and -579612 + 2874063 or -865253 + 11922382
                                    end
                                end
                            end
                        end
                    else
                        if i < -30277 + 15176817 then
                            if i < 428214 + 13378500 then
                                if i < 13529930 - 100773 then
                                    if i < 13854315 - 602335 then
                                        if i < 395650 + 12156110 then
                                            a = nil
                                            Q = nil
                                            u = nil
                                            i = 6512671 - 259923
                                        else
                                            i = {}
                                            a = 311355 + -311100
                                            z[J[701607 - 701605]] = i
                                            f = 254876 + 35184371833956
                                            m = z[J[759749 + -759746]]
                                            u = m
                                            m = M % f
                                            g = -846326 - (-846327)
                                            z[J[-431325 - (-431329)]] = m
                                            C = X(-255813 + 207520)
                                            Q = M % a
                                            i = -909575 + 10364037
                                            a = 762730 - 762728
                                            f = Q + a
                                            z[J[283631 + -283626]] = f
                                            a = v[C]
                                            K = g
                                            g = -28814 - (-28814)
                                            C = X(723005 + -771302)
                                            Q = a[C]
                                            a = Q(q)
                                            Q = X(-946563 - (-898263))
                                            C = -1031488 - (-1031489)
                                            V = K < g
                                            g = C - K
                                            p[M] = Q
                                            Q = 645475 - 645413
                                            U = a
                                        end
                                    else
                                        W = #H
                                        F = 584731 + -584730
                                        j = u(F, W)
                                        F = Q(H, j)
                                        W = z[V]
                                        i = 7698552 - (-776176)
                                        x = -332762 - (-332763)
                                        T = F - x
                                        l = a(T)
                                        j = nil
                                        W[F] = l
                                        F = nil
                                    end
                                else
                                    if i < 13660031 - 142024 then
                                        q = Z[14636 - 14635]
                                        i = z[J[131619 + -131618]]
                                        p = i
                                        M = Z[158519 + -158517]
                                        i = p[M]
                                        i = i and 6331410 - 288015 or -814135 + 14025099
                                    else
                                        H = X(27681 - 75987)
                                        i = -654510 + 12786595
                                        V = v[H]
                                        H = X(361342 - 409636)
                                        K = V[H]
                                        U = K
                                    end
                                end
                            else
                                if i < 331270 + 14505390 then
                                    if i < 383847 + 13731071 then
                                        M = X(862730 + -911038)
                                        m = 4260929 - (-681125)
                                        p = 8278932 - 480375
                                        q = M ^ p
                                        i = m - q
                                        q = i
                                        m = X(968868 + -1017150)
                                        i = m / q
                                        m = {i}
                                        i = v[X(105029 + -153331)]
                                    else
                                        p = 935171 - 935170
                                        M = z[J[73237 - 73234]]
                                        q = M ~= p
                                        i = q and 11638154 - 667991 or 130055 + 3225008
                                    end
                                else
                                    if i < -174479 + 15085523 then
                                        M = z[J[637891 - 637890]]
                                        u = -425663 + 425664
                                        f = -904637 - (-904639)
                                        p = M(u, f)
                                        M = 913203 - 913202
                                        q = p == M
                                        i = q and 16537183 - 879500 or 659974 + 7176937
                                        m = q
                                    else
                                        i = h(2616358 - (-286809), {u})
                                        O = {i()}
                                        m = {P(O)}
                                        i = v[X(20115 - 68404)]
                                    end
                                end
                            end
                        else
                            if i < 409061 + 15524319 then
                                if i < 16563263 - 764013 then
                                    if i < 15638910 - 75767 then
                                        if i < 15721408 - 397100 then
                                            q = z[J[-822148 - (-822149)]]
                                            m = #q
                                            q = -616430 - (-616430)
                                            i = m == q
                                            i = i and 9820461 - 268485 or 1484314 - (-574577)
                                        else
                                            i = 827991 + 4068551
                                            O = K == V
                                            G = O
                                        end
                                    else
                                        i = m and 1243723 - 491503 or 16297399 - 368031
                                    end
                                else
                                    if i < 662140 + 15255837 then
                                        t = 252354 - 252353
                                        i = -854663 + 4779332
                                        I = L[t]
                                        w = I
                                    else
                                        i = z[J[-99377 + 99384]]
                                        i = i and 2933107 - (-712747) or 8974009 - 996776
                                    end
                                end
                            else
                                if i < 15953185 - (-599000) then
                                    if i < 28999 + 16457979 then
                                        M = p
                                        C = 480254 + -480254
                                        U = -493298 - (-493553)
                                        i = z[J[-1022885 + 1022886]]
                                        a = i(C, U)
                                        q[M] = a
                                        M = nil
                                        i = -879325 + 5663178
                                    else
                                        i = true
                                        z[J[-530670 - (-530671)]] = i
                                        m = {}
                                        i = v[X(-542281 - (-494002))]
                                    end
                                else
                                    if i < -371469 + 16959201 then
                                        m = X(-600060 + 551770)
                                        i = v[m]
                                        q = X(-904167 - (-855849))
                                        m = v[q]
                                        q = X(-500113 + 451795)
                                        v[q] = i
                                        q = X(-17125 - 31165)
                                        v[q] = m
                                        q = z[J[-839034 + 839035]]
                                        M = q()
                                        i = 546320 + 11351492
                                    else
                                        m = {}
                                        i = v[X(-322141 + 273825)]
                                    end
                                end
                            end
                        end
                    end
                end
            end
            i = #D
            return P(m)
        end, {}
        return (f(12118790 - 154508, {}))(P(m))
    end)(getfenv and getfenv() or _ENV, unpack or table[X(120436 - 168730)], newproxy, setmetatable, getmetatable,
        select, {...})
end)(...)
